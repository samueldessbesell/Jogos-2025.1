#include <stdio.h>
#include <locale.h>
#include <stdlib.h>
#include <windows.h>
#include <time.h>

int main() {
    setlocale(LC_ALL, "");
    int opcaoMenu, opcaoFinal;
   
    while (1) {
        system("cls");
        printf("Bem-vindo ao Arcade!\n");
        printf("1. Jogo do Milhão\n");
        printf("2. Cobra na Caixa\n");
        printf("3. Gousmas War\n");
        printf("4. Sair\n");
        printf("Escolha um jogo: ");
        scanf("%d", &opcaoMenu);
        fflush(stdin);

        if (opcaoMenu == 1) {
            // JOGO DO MILHÃO
            do {
                system("cls");
                printf("Bem-vindo ao Jogo do Milhão!\n");

//crie um jogo de perguntas e respostas tendo como imput a entrada de numeros de 'A' a 'D' como como seleção de respostas

char letra, resp;
int frequencias[] = {659, 659, 659, 523, 659, 784, 392}; // Frequências em Hz
    int duracoes[] = {200, 200, 200, 200, 200, 400, 400};   // Durações em milissegundos
    int i;
    srand(time(NULL));
int r=rand()%6;
int qtota=0;
int quant_acerto=0;


int q0=0,q1=0,q2=0,q3=0,q4=0,q5=0;

printf("seja bem vindo ao jogo do milhão do SBT MA ÔE\n você quer jogar s/n ");
fflush(stdin);
scanf("%c/n",&letra);
while(qtota<=5){



int r=rand()%6;



if(letra=='s'||letra=='S'){

if(r==0){


if(q0==1){
continue;
}
else{


system("cls");
printf("Em que estado brasileiro nasceu a apresentadora Xuxa?\n");
printf("\n a:RIO DE JANEIRO b:RIO GRANDE DO SUL\n c:SANTA CATARINA d:GOIÁS\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'a'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}

printf("\nacertou miseravi MA ÔE\n");
system("pause");
qtota++;
q0++;
}
else if(resp=='b'||resp=='B'||resp=='C'||resp=='D'|| resp=='c'||resp=='d'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q0++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");
Sleep(20);

}
}
}

else if(r==1){


if(q1==1){
continue;
}
else{
system("cls");
printf("Qual é o nome dado ao estadoda água em forma de gelo?\n");
printf("a:LÍQUIDO b:SÓLIDO\nc:GASOSO d:VAPOROSO\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'b'||resp=='B'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}
printf("\nacertou miseravi MA ÔE\n");
system("pause");
quant_acerto++;
qtota++;
q1++;
}
else if(resp=='a'||resp=='A'||resp=='C'||resp=='D'|| resp=='c'||resp=='d'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q1++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");
}

}
}
else if(r==2){



if(q2==1){
continue;
}

else{
system("cls");
printf("\nQual é o personagem do folclore brasileiro que tem uma perna só?\n");
printf("\na: CUCA b: NEGRINHO DO PASTOREIO\nc: BOITATÁ d: SACI-PERERÊ\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'd'||resp=='D'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}
printf("\nacertou miseravi MA ÔE\n");
system("pause");
quant_acerto++;
qtota++;
q2++;
}
else if(resp=='b'||resp=='B'||resp=='C'||resp=='A'|| resp=='c'||resp=='a'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q2++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");
}

}

}
else if(r==3){

if(q3==1){
continue;
}
else{
system("cls");
printf("Quem fundou a fábrica de automóveis Ford?\n");
printf("a:HARRISON FORD b:GERALD FORD\nc:HENRY FORD d:ANNA FORD\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'c'||resp=='C'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}
printf("\nacertou miseravi MA ÔE\n");
system("pause");
quant_acerto++;
qtota++;
q3++;
}
else if(resp=='b'||resp=='B'||resp=='A'||resp=='D'|| resp=='a'||resp=='d'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q3++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");

}
}
}
else if(r==4){



if(q4==1){
continue;
}
else{
system("cls");
printf("Qual é a cor que se associa com os grupos ecológicos?\n");
printf("a:PRETA b:VERMELHA\nc:AZUL d:VERDE\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'd'||resp=='D'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}
printf("\nacertou miseravi MA ÔE ");
system("pause");
quant_acerto++;
qtota++;
q4++;
}
else if(resp=='b'||resp=='B'||resp=='C'||resp=='A'|| resp=='c'||resp=='a'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q4++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");

}
}
}
else if(r==5){


if(q5==1){
continue;
}

else{
system("cls");
printf("Qual ser mitológico possui o corpo metade mulher e metade peixe?\n");
printf("a:SEREIA b:MEDUSA \nc:CLEÓPATRA d:SERENA\n");
fflush(stdin);
scanf("%c",&resp);

if(resp== 'a'||resp=='A'){
for (i = 0; i < 7; i++){
  Beep(frequencias[i], duracoes[i]);
        Sleep(20);
}
printf("\nacertou miseravi MA ÔE\n ");\
system("pause");
quant_acerto++;
qtota++;
q5++;
}
else if(resp=='b'||resp=='B'||resp=='C'||resp=='D'|| resp=='c'||resp=='d'){
printf("\nperdeste a rodada\n");
system("pause");
qtota++;
q5++;
}

else{
printf("\npara de testar o codigo\n");
system("pause");
}
}
}



}
else{
break;
}
}
system("cls");
printf("Quantidade de Acertos %d/5",quant_acerto);


                printf("\n1. Jogar novamente\n2. Voltar ao menu\nEscolha: ");
                scanf("%d", &opcaoFinal);
                fflush(stdin);
            } while (opcaoFinal == 1);

        } else if (opcaoMenu == 2) {
            // COBRA NA CAIXA
            do {
                system("cls");
                printf("Bem-vindo ao Cobra na Caixa!\n");
#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>
#include <locale.h>

#define RED     "\033[1;31m"
#define GREEN   "\033[1;32m"
#define YELLOW  "\033[1;33m"
#define BLUE    "\033[1;34m"
#define RESET   "\033[0m"

void tocarSomVitoria() {
    Beep(1000, 300);
    Beep(1200, 300);
    Beep(1400, 300);
}

void tocarSomDerrota() {
    Beep(400, 300);
    Beep(300, 300);
    Beep(200, 300);
}

void tocarSomCaixaVazia() {
    Beep(800, 200);
}

void exibirPontuacao(char nomes[2][20], int pontuacao[2]) {
    printf(BLUE "\nPontuação Atual:\n" RESET);
    printf(GREEN "%s: %d vitórias\n" RESET, nomes[0], pontuacao[0]);
    printf(YELLOW "%s: %d vitórias\n" RESET, nomes[1], pontuacao[1]);
}

void exibirCaixasDisponiveis(int caixasEscolhidas[5]) {
    printf(BLUE "\nCaixas disponíveis: " RESET);
    int i;
    for (i = 0; i < 5; i++) {
        if (!caixasEscolhidas[i]) {
            printf(GREEN "%d " RESET, i + 1);
        }
    }
    printf("\n");
}

    int caixaBotao, caixaCobra, escolha, jogadorAtual, continuar;
    int caixasEscolhidas[5];
    char nomes[2][20];
    int i;
    int pontuacao[2] = {0, 0};
   
    srand(time(NULL));
   
    system("cls");
    printf(YELLOW "\nBem-vindo ao Cobra na Caixa!\n" RESET);
    printf("Jogador 1, digite seu nome: ");
    scanf("%s", nomes[0]);
    printf("Jogador 2, digite seu nome: ");
    scanf("%s", nomes[1]);
    system("cls");
   
    jogadorAtual = rand() % 2;
   
    do {
        for (i = 0; i < 5; i++) {
            caixasEscolhidas[i] = 0;
        }
       
        caixaBotao = rand() % 5 + 1;
        caixaCobra = rand() % 5 + 1;
        while (caixaCobra == caixaBotao) {
            caixaCobra = rand() % 5 + 1;
        }
       
        while (1) {
            system("cls");
            exibirPontuacao(nomes, pontuacao);
            exibirCaixasDisponiveis(caixasEscolhidas);
           
            printf("\n%s, escolha uma caixa (1 a 5): ", nomes[jogadorAtual]);
            scanf("%d", &escolha);
            fflush(stdin);
           
            if (escolha < 1 || escolha > 5) {
                printf(RED "Escolha inválida. Tente novamente.\n" RESET);
                system("pause");
                continue;
            }
           
            if (caixasEscolhidas[escolha - 1]) {
                printf(RED "Essa caixa já foi escolhida! Tente outra.\n" RESET);
                system("pause");
                continue;
            }
           
            caixasEscolhidas[escolha - 1] = 1;
           
            if (escolha == caixaCobra) {
                system("cls");
                printf(RED "\nVocê encontrou a cobra! %s perdeu!\n" RESET, nomes[jogadorAtual]);
                tocarSomDerrota();
                system("pause");
                jogadorAtual = 1 - jogadorAtual;
                pontuacao[jogadorAtual]++;
                break;
            } else if (escolha == caixaBotao) {
                system("cls");
                printf(GREEN "\nParabéns! %s encontrou o botão e venceu!\n" RESET, nomes[jogadorAtual]);
                tocarSomVitoria();
                system("pause");
                pontuacao[jogadorAtual]++;
                break;
            } else {
                printf(YELLOW "\nA caixa estava vazia. Próximo jogador!\n" RESET);
                tocarSomCaixaVazia();
                jogadorAtual = 1 - jogadorAtual;
                system("pause");
            }
        }
       
        system("cls");
        exibirPontuacao(nomes, pontuacao);
        system("pause");
       
system("cls");
printf("\nDesejam jogar novamente, %s e %s? (Qualquer tecla - Sim / 0 - Não): ", nomes[0], nomes[1]);
scanf("%d", &continuar);
fflush(stdin);
       
    } while (continuar != 0);
   
    printf(YELLOW "\nFim do jogo! Pontuação Final:\n" RESET);
    printf(GREEN "%s: %d vitórias\n" RESET, nomes[0], pontuacao[0]);
    printf(YELLOW "%s: %d vitórias\n" RESET, nomes[1], pontuacao[1]);
   
                printf("\n1. Jogar novamente (reiniciará a pontuação)\n2. Voltar ao menu\nEscolha: ");
                scanf("%d", &opcaoFinal);
                fflush(stdin);
            } while (opcaoFinal == 1);

        } else if (opcaoMenu == 3) {
            // GOUSMAS WAR
            do {
                system("cls");
                printf("Bem-vindo ao Gousmas War!\n");
    int furia1j1 = 1, furia2j1 = 1, ativa1j1 = 1, ativa2j1 = 1;
    int furia1j2 = 1, furia2j2 = 1, ativa1j2 = 1, ativa2j2 = 1;
    int turno = 1, opcao, gousmaAtacante, gousmaDefensora, transferencia;
   
    while (1) {
        system("cls");
        printf("\nStatus das Gousmas:\n");
        printf("Jogador 1: G1 [%d] - G2 [%d]\n", ativa1j1 * furia1j1, ativa2j1 * furia2j1);
        printf("Jogador 2: G1 [%d] - G2 [%d]\n", ativa1j2 * furia1j2, ativa2j2 * furia2j2);
        printf("\nTurno do Jogador %d\n", turno);
       
        do {
            printf("1. Atacar\n");
            if ((turno == 1 && ((furia1j1 % 2 == 0 && ativa2j1 == 0) || (furia2j1 % 2 == 0 && ativa1j1 == 0))) ||
                (turno == 2 && ((furia1j2 % 2 == 0 && ativa2j2 == 0) || (furia2j2 % 2 == 0 && ativa1j2 == 0)))) {
                printf("2. Dividir\n");
            }
            printf("Escolha uma opção: ");
            scanf("%d", &opcao);
            fflush(stdin);
            if (opcao != 1 && opcao != 2) {
                printf("Opção inválida! Escolha 1 ou 2.\n");
            }
        } while (opcao != 1 && opcao != 2);
       
        if (opcao == 1) {
            do {
                printf("Escolha sua Gousma para atacar (1 ou 2): ");
                scanf("%d", &gousmaAtacante);
                fflush(stdin);
               
                if (gousmaAtacante != 1 && gousmaAtacante != 2) {
                    printf("Opção inválida! Escolha 1 ou 2.\n");
                } else if ((turno == 1 && ((gousmaAtacante == 1 && ativa1j1 == 0) || (gousmaAtacante == 2 && ativa2j1 == 0))) ||
                           (turno == 2 && ((gousmaAtacante == 1 && ativa1j2 == 0) || (gousmaAtacante == 2 && ativa2j2 == 0)))) {
                    printf("Esta Gousma não pode atacar! Escolha outra.\n");
                    gousmaAtacante = 0;
                }
            } while (gousmaAtacante != 1 && gousmaAtacante != 2);
           
            do {
                printf("Escolha a Gousma do oponente para atacar (1 ou 2): ");
                scanf("%d", &gousmaDefensora);
                fflush(stdin);
               
                if (gousmaDefensora != 1 && gousmaDefensora != 2) {
                    printf("Opção inválida! Escolha 1 ou 2.\n");
                }
            } while (gousmaDefensora != 1 && gousmaDefensora != 2);
           
            if (turno == 1) {
                if (gousmaAtacante == 1) {
                    transferencia = furia1j1;
                } else {
                    transferencia = furia2j1;
                }
                if (gousmaDefensora == 1) {
                    furia1j2 += transferencia;
                    if (furia1j2 >= 5) {
                        ativa1j2 = 0;
                        furia1j2 = 0;
                    }
                } else {
                    furia2j2 += transferencia;
                    if (furia2j2 >= 5) {
                        ativa2j2 = 0;
                        furia2j2 = 0;
                    }
                }
            } else {
                if (gousmaAtacante == 1) {
                    transferencia = furia1j2;
                } else {
                    transferencia = furia2j2;
                }
                if (gousmaDefensora == 1) {
                    furia1j1 += transferencia;
                    if (furia1j1 >= 5) {
                        ativa1j1 = 0;
                        furia1j1 = 0;
                    }
                } else {
                    furia2j1 += transferencia;
                    if (furia2j1 >= 5) {
                        ativa2j1 = 0;
                        furia2j1 = 0;
                    }
                }
            }
        }else if (opcao == 2) {
            printf("Escolha a Gousma para dividir (1 ou 2): ");
            scanf("%d", &gousmaAtacante);
            fflush(stdin);
           
            if (turno == 1) {
                if (gousmaAtacante == 1 && ativa1j1 == 1 && furia1j1 > 1 && ativa2j1 == 0) {
                    furia2j1 = furia1j1 / 2;
                    furia1j1 -= furia2j1;
                    ativa2j1 = 1;
                } else if (gousmaAtacante == 2 && ativa2j1 == 1 && furia2j1 > 1 && ativa1j1 == 0) {
                    furia1j1 = furia2j1 / 2;
                    furia2j1 -= furia1j1;
                    ativa1j1 = 1;
                }
            } else {
                if (gousmaAtacante == 1 && ativa1j2 == 1 && furia1j2 > 1 && ativa2j2 == 0) {
                    furia2j2 = furia1j2 / 2;
                    furia1j2 -= furia2j2;
                    ativa2j2 = 1;
                } else if (gousmaAtacante == 2 && ativa2j2 == 1 && furia2j2 > 1 && ativa1j2 == 0) {
                    furia1j2 = furia2j2 / 2;
                    furia2j2 -= furia1j2;
                    ativa1j2 = 1;
                }
            }
        }
       
        if (ativa1j1 == 0 && ativa2j1 == 0) {
            system("cls");
            printf("Jogador 2 venceu!\n");
            break;
        }
        if (ativa1j2 == 0 && ativa2j2 == 0) {
            system("cls");
            printf("Jogador 1 venceu!\n");
            break;
        }
       
        if (turno == 1) {
            turno = 2;
        } else {
            turno = 1;
        }
    }
   
    printf("Obrigado por jogar!\n");
                printf("\n1. Jogar novamente\n2. Voltar ao menu\nEscolha: ");
                scanf("%d", &opcaoFinal);
                fflush(stdin);
            } while (opcaoFinal == 1);

        } else if (opcaoMenu == 4) {
            printf("Obrigado por jogar!\n");
            break;
        } else {
            printf("Opção inválida! Escolha entre 1 e 4.\n");
            system("pause");
        }
    }

    return 0;
}
