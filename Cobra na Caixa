#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <windows.h>
#include <locale.h>

#define RED     "\033[1;31m"
#define GREEN   "\033[1;32m"
#define YELLOW  "\033[1;33m"
#define BLUE    "\033[1;34m"
#define RESET   "\033[0m"

void tocarSomVitoria() {
    Beep(1000, 300);
    Beep(1200, 300);
    Beep(1400, 300);
}

void tocarSomDerrota() {
    Beep(400, 300);
    Beep(300, 300);
    Beep(200, 300);
}

void tocarSomCaixaVazia() {
    Beep(800, 200);
}

void exibirPontuacao(char nomes[2][20], int pontuacao[2]) {
    printf(BLUE "\nPontuação Atual:\n" RESET);
    printf(GREEN "%s: %d vitórias\n" RESET, nomes[0], pontuacao[0]);
    printf(YELLOW "%s: %d vitórias\n" RESET, nomes[1], pontuacao[1]);
}

void exibirCaixasDisponiveis(int caixasEscolhidas[5]) {
    printf(BLUE "\nCaixas disponíveis: " RESET);
    int i;
    for (i = 0; i < 5; i++) {
        if (!caixasEscolhidas[i]) {
            printf(GREEN "%d " RESET, i + 1);
        }
    }
    printf("\n");
}

int main() { //ele está um pouco desatualizado em relação ao código oficial em "Menu de Jogos".
    setlocale(LC_ALL, "");
    int caixaBotao, caixaCobra, escolha, jogadorAtual, continuar;
    int caixasEscolhidas[5];
    char nomes[2][20];
    int i;
    int pontuacao[2] = {0, 0};
   
    srand(time(NULL));
   
    system("cls");
    printf(YELLOW "\nBem-vindo ao Cobra na Caixa!\n" RESET);
    printf("Jogador 1, digite seu nome: ");
    scanf("%s", nomes[0]);
    printf("Jogador 2, digite seu nome: ");
    scanf("%s", nomes[1]);
    system("cls");
   
    jogadorAtual = rand() % 2;
   
    do {
        for (i = 0; i < 5; i++) {
            caixasEscolhidas[i] = 0;
        }
       
        caixaBotao = rand() % 5 + 1;
        caixaCobra = rand() % 5 + 1;
        while (caixaCobra == caixaBotao) {
            caixaCobra = rand() % 5 + 1;
        }
       
        while (1) {
            system("cls");
            exibirPontuacao(nomes, pontuacao);
            exibirCaixasDisponiveis(caixasEscolhidas);
           
            printf("\n%s, escolha uma caixa (1 a 5): ", nomes[jogadorAtual]);
            scanf("%d", &escolha);
            fflush(stdin);
           
            if (escolha < 1 || escolha > 5) {
                printf(RED "Escolha inválida. Tente novamente.\n" RESET);
                system("pause");
                continue;
            }
           
            if (caixasEscolhidas[escolha - 1]) {
                printf(RED "Essa caixa já foi escolhida! Tente outra.\n" RESET);
                system("pause");
                continue;
            }
           
            caixasEscolhidas[escolha - 1] = 1;
           
            if (escolha == caixaCobra) {
                system("cls");
                printf(RED "\nVocê encontrou a cobra! %s perdeu!\n" RESET, nomes[jogadorAtual]);
                tocarSomDerrota();
                system("pause");
                jogadorAtual = 1 - jogadorAtual;
                pontuacao[jogadorAtual]++;
                break;
            } else if (escolha == caixaBotao) {
                system("cls");
                printf(GREEN "\nParabéns! %s encontrou o botão e venceu!\n" RESET, nomes[jogadorAtual]);
                tocarSomVitoria();
                system("pause");
                pontuacao[jogadorAtual]++;
                break;
            } else {
                printf(YELLOW "\nA caixa estava vazia. Próximo jogador!\n" RESET);
                tocarSomCaixaVazia();
                jogadorAtual = 1 - jogadorAtual;
                system("pause");
            }
        }
       
        system("cls");
        exibirPontuacao(nomes, pontuacao);
        system("pause");
       
		system("cls");
		printf("\nDesejam jogar novamente, %s e %s? (Qualquer tecla - Sim / 0 - Não): ", nomes[0], nomes[1]);
		scanf("%d", &continuar);
		fflush(stdin);
       
    } while (continuar != 0);
   
    printf(YELLOW "\nFim do jogo! Pontuação Final:\n" RESET);
    printf(GREEN "%s: %d vitórias\n" RESET, nomes[0], pontuacao[0]);
    printf(YELLOW "%s: %d vitórias\n" RESET, nomes[1], pontuacao[1]);
   
    return 0;
}
